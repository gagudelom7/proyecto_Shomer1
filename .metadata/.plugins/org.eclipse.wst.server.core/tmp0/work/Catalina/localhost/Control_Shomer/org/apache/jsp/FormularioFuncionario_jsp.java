/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.53
 * Generated at: 2021-10-21 02:39:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.HashMap;
import javax.sql.DataSource;

public final class FormularioFuncionario_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.sql.DataSource");
    _jspx_imports_classes.add("java.util.HashMap");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Formulario Funcionario</title>\r\n");
      out.write("<link href=\"s_resources/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"s_resources/css/bootstrap.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"s_resources/css/formularios.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h1 class=\"titulo\">Ingresar Funcionario</h1>\r\n");
      out.write("<img src=\"s_resources/img/shomer.gif\" alt=\"\" class=\"logo2\">\r\n");
      out.write("\r\n");
      out.write("	<form name=\"form1\" method=\"get\" action=\"ControladorFuncionario\">\r\n");
      out.write("\r\n");
      out.write("<!-- Creamos un campo de tipo Hidden para que el usuario no lo vea con la instruccion\r\n");
      out.write("de actualizar la informacion en la BBDD -->\r\n");
      out.write("\r\n");
      out.write("		<input type=\"hidden\" name=\"instruccion\" value=\"ingresarFuncionarioBBDD\">\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row mb-3\">\r\n");
      out.write("			\r\n");
      out.write("					<div class=\"col-4 mb-3\">\r\n");
      out.write("						<div class=\"form-group has-success\">\r\n");
      out.write("						\r\n");
      out.write("							<label class=\"control-label\" for=\"inputSuccess1\">Nombre Funcionario</label> \r\n");
      out.write("							<input class=\"form-control\" type=\"text\" name=\"nameFuncionario\" id=\"nameFuncionario\"\r\n");
      out.write("							onkeyup=\"success()\" onkeypress=\"return soloLetras(event)\" required>\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"form-group col-md-4\">\r\n");
      out.write("						<div class=\"form-group has-success\">\r\n");
      out.write("							<label class=\"control-label\" for=\"inputSuccess1\">Apellidos Funcionario</label>\r\n");
      out.write("							<input class=\"form-control\" type=\"text\" name=\"apelFuncionario\" id=\"apelFuncionario\"\r\n");
      out.write("							onkeyup=\"success()\" onkeypress=\"return soloLetras(event)\" required>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"form-group col-md-4\">\r\n");
      out.write("						<div class=\"form-group has-success\">\r\n");
      out.write("							<label class=\"control-label\" for=\"inputSuccess1\">Telefono Oficina</label>\r\n");
      out.write("							<input class=\"form-control\" type=\"text\" name=\"telOficina\" id=\"telOficina\" onkeyup=\"success()\" onkeypress=\"return soloNumeros(event)\">\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row mb-3\">\r\n");
      out.write("			\r\n");
      out.write("					<div class=\"col-4 mb-3\">\r\n");
      out.write("					\r\n");
      out.write("						<div class=\"form-group has-success\">\r\n");
      out.write("							<label class=\"control-label\" for=\"inputSuccess1\">Email Funcionario</label>\r\n");
      out.write("							<input class=\"form-control\" type=\"text\" name=\"emailFuncionario\" maxlength=\"50\" id=\"emailFuncionario\"\r\n");
      out.write("							onkeyup=\"success()\"	data-pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\">\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<div class=\"form-group col-md-4\">\r\n");
      out.write("\r\n");
      out.write("						<div class=\"form-group has-success\">\r\n");
      out.write("							<label class=\"control-label\" for=\"inputSuccess1\">Dependencia</label>\r\n");
      out.write("							<select name=\"codDependencia\" class=\"form-select\" aria-label=\"Default select example\">\r\n");
      out.write("								\r\n");
      out.write("							");

								@SuppressWarnings("unchecked")
									HashMap<String, String> drop2 = (HashMap<String, String>)request.getAttribute("dependencias");
									
									
									for(String i: drop2.keySet()){
										
										out.println("<option value = '" + i + "' > " + drop2.get(i) + "</option>");
									} 
									
								
								
      out.write("\r\n");
      out.write("							</select>\r\n");
      out.write("						\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("					\r\n");
      out.write("					<div class=\"col-4 mb-3\">\r\n");
      out.write("					\r\n");
      out.write("						<div class=\"contenedorBoton\">\r\n");
      out.write("							<button type=\"submit\" name=\"button\" id=\"button\"	class=\"formulario__btn\" disabled>Enviar</button>\r\n");
      out.write("							<button type=\"reset\" name=\"borrar\" id=\"borrar\"	class=\"formulario__btn\">Resetear</button>\r\n");
      out.write("							<button type=\"button\" value=\"regresar\" class=\"formulario__btn\" onclick=\"history.back()\">Regresar</button>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\" src=\"s_resources/js/validaCampo.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"s_resources/js/textScriptF.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
